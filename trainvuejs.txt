train Vuejs 
https://gist.github.com/tutor4dev/864aa0f62afce640c234f82be2cc5f90#file-01-overview-md
**setting***
- Chome Extension
Vue DevTools
- Vistual Studio Extensions
npm Intellisense
Path Intellisense
vue (liuji-jim)
Vue VSCode Snippets
- npm Global Package
Terminal
npm -g install yarn
npm -g install @vue/cli
npm -g install json-server
npm -g nodemon
- font
fira code
==========================================================================================
22/07/2018
- Cmd keys
npm -g -list --depth=0  >> check list npm
table.table#tblresult>tr>td*5  >> key create element
yarn add live-server >> add live-server to project [local] 
vue ui >> create/config project with ui
code. >> open visual code on cmd
yarn add vue-router >> add package router
yarn add vee-validate >> add package validate
json-server mywind.json >> run json-server
yarn add axios >> add package use restful
- Vue
computed cached but methods not cached
v-model >> check type from tag
ถ้าชื่อตัวแปรเป็นชื่อเดียวกับ props ให้พิมพ์แค่ตัวเดียวได้เลย ex routes : routes เขียนเป็น routes
===========================================================================================
04/08/2018
* cmd key
-yarn add lodash >>> ใช้ในการหน่วยเวลา
-yarn add bcryptjs >>> package encrypt
-yarn add jsonwebtoken >> package token

* detail
-respone
async getCustomers(limit, page) {
      const { data: customer, headers } = await axios.get(
        `http://localhost:3000/customers/?_limit=${limit}&_page=${page}`
      );
      console.log(headers["x-total-count"]);
      this.customers = customer;
-setting format
open user setting add   "editor.formatOnSave": true and add file .prettierrc 
code in file .prettierrc  == > {
									"semi":false,
									"singleQuote":true,
									"tabWidth": 4
								}
-clone object 
const foo = { foo: 'FOO' }
const bar = { ...foo, bar: 'BAR', baz: 'BAZ' }
============================================================================================
05/08/2018
* db
init db >> mysql -u root -p < tutor4dev.sql
use db >>  mysql -u root -p
show db >> show databases;

* detail
add express >> yarn add express
middleware = routes
enpoint api :
GET /customers >>> select all 
GET /customers/:id >> select id 
POST /customers >> insert
PUT /customers/:id >> update
DELETE /customers/:id >> delete
add plugin mysql >> yarn add mysql2
สร้างความสัมพันธ์ให้เทเบิ้ลแบบ โมเดล >> yarn add sequelize (mysql) , npm tedious (sql server)
create variable name  >>
- should url /products , table products 


-middleware 
ใช้ในการเช็คการเข้าทำงานของ app และการส่งข้อมูลออกจาก app
สามารถเลือกใช้เฉพาะที่ได้ ไม่จำเป็นต้องใช้ทั้ง app

-conncet db 
.all = select * from 
.findById = select * from .. where id (primarykey)
add options >> tableName : 'xxx'  เพื่อเป็นการ  reference table in db
app.use(express.json())  >> แปลงค่าที่ post ให้เป็น json
กำหนดค่าเริ่มต้นที่ของ record ที่ต้องการ  (offset) , limit = จำนวน record ที่ต้องการดึง  >>>>  
const result = await Product.all({
            offset: 0
            , limit: 10
        })

